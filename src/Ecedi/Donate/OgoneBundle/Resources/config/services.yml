# @since 2.1.0
parameters:
    donate_ogone:
        pspid: ~
        prod: false
        prefix: ~
        security:
            sha1_in: ~
            sha1_out: ~
        # @since 2.2.0 asynchronous post-sale handling is droped
        #async_postsale: false

services:
    # normalisation des status ogone vers les status de paiement
    donate_ogone.status_normalizer:
        class: Ecedi\Donate\OgoneBundle\Ogone\StatusNormalizer

    # Plugin de payment methode
    ecollect.pm.ogone:
        class: Ecedi\Donate\OgoneBundle\Service\OgonePaymentMethod
        parent: ecollect.payment_method
        tags:
            - {name: donate.payment_method}

#    ecollect.pm.paypal:
#        class: Ecedi\Donate\OgoneBundle\Service\PaypalPaymentMethod
#        tags:
#            - {name: donate.payment_method}

    donate_ogone.postsale.manager:
        class: Ecedi\Donate\OgoneBundle\Ogone\PostSale\PostSaleManager
        arguments: ['@donate_core.intent_manager', '@donate_ogone.status_normalizer', '%donate_ogone.security.sha1_out%', '%donate_ogone.prefix%', '@logger']

    # generateur de Requete Ogone
    donate_ogone.request.factory:
        class: Ecedi\Donate\OgoneBundle\Ogone\RequestBuilder
        calls:
            - [setContainer, ['@service_container']]

    # Observateur qui envoie des emails au Webmaster quand les status sont en erreur
    ecollect.listener.notify_postsale:
        class: Ecedi\Donate\OgoneBundle\EventListener\NotifyPostSaleStatusListener
        arguments: ['@templating', '%donate_core.mail.webmaster%', '@mailer', '@logger']
        tags:
            - {name: kernel.event_subscriber}


    #Observateur traitement de la postsale
    ecollect.listener.handle_postsale:
        class: Ecedi\Donate\OgoneBundle\EventListener\HandlePostSaleListener
        arguments: ['@donate_ogone.postsale.manager', '@logger']
        tags:
            - {name: kernel.event_subscriber}


